---
openapi: 3.0.1
info:
  title: Contact Hub API V1
  version: v1
paths:
  "/contacts":
    parameters:
    - name: Authorization
      in: header
      required: true
      description: Authorization token
      schema:
        type: string
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    - name: Client
      in: header
      required: true
      description: Client id
      schema:
        type: string
    get:
      summary: Get all contacts
      tags:
      - Contact
      security:
      - Bearer: []
      responses:
        '200':
          description: contacts found
    post:
      summary: Create a contact
      tags:
      - Contact
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: contact created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  name:
                    type: string
                  cpf:
                    type: string
                  phone_number:
                    type: string
                  location_id:
                    type: string
                  user_id:
                    type: string
                location:
                  address:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
                  zip_code:
                    type: string
                  latitude:
                    type: string
                  longitude:
                    type: string
              required:
              - contact
              - location
          application/xml:
            schema:
              type: object
              properties:
                contact:
                  name:
                    type: string
                  cpf:
                    type: string
                  phone_number:
                    type: string
                  location_id:
                    type: string
                  user_id:
                    type: string
                location:
                  address:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
                  zip_code:
                    type: string
                  latitude:
                    type: string
                  longitude:
                    type: string
              required:
              - contact
              - location
  "/contacts/{id}":
    parameters:
    - name: Authorization
      in: header
      required: true
      description: Authorization token
      schema:
        type: string
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    - name: Client
      in: header
      required: true
      description: Client id
      schema:
        type: string
    - name: id
      in: path
      required: true
      description: ID of the contact
      schema:
        type: string
    get:
      summary: Get a contact
      tags:
      - Contact
      security:
      - Bearer: []
      responses:
        '200':
          description: contact found
        '404':
          description: contact not found
        '401':
          description: unauthorized
    patch:
      summary: Update a contact
      tags:
      - Contact
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: ID of the contact
        schema:
          type: string
      responses:
        '200':
          description: contact created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  name:
                    type: string
                  cpf:
                    type: string
                  phone_number:
                    type: string
                  location_id:
                    type: string
                  user_id:
                    type: string
                location:
                  address:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
                  zip_code:
                    type: string
                  latitude:
                    type: string
                  longitude:
                    type: string
              required:
              - contact
              - location
          application/xml:
            schema:
              type: object
              properties:
                contact:
                  name:
                    type: string
                  cpf:
                    type: string
                  phone_number:
                    type: string
                  location_id:
                    type: string
                  user_id:
                    type: string
                location:
                  address:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
                  zip_code:
                    type: string
                  latitude:
                    type: string
                  longitude:
                    type: string
              required:
              - contact
              - location
    delete:
      summary: Delete a contact
      tags:
      - Contact
      security:
      - Bearer: []
      responses:
        '204':
          description: contact deleted
        '404':
          description: contact not found
        '401':
          description: unauthorized
  "/contacts/destroy_multiple":
    parameters:
    - name: Authorization
      in: header
      required: true
      description: Authorization token
      schema:
        type: string
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    - name: Client
      in: header
      required: true
      description: Client id
      schema:
        type: string
    put:
      summary: Destroy multiple contacts
      tags:
      - Contact
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: contacts destroyed
        '401':
          description: unauthorized
  "/locations":
    parameters:
    - name: Authorization
      in: header
      required: true
      description: Authorization token
      schema:
        type: string
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    - name: Client
      in: header
      required: true
      description: Client id
      schema:
        type: string
    get:
      summary: Get all locations
      tags:
      - Município
      security:
      - Bearer: []
      responses:
        '200':
          description: locations found
        '401':
          description: unauthorized
    post:
      summary: Create a location
      tags:
      - Município
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: location created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  address:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
                  zip_code:
                    type: string
                  latitude:
                    type: string
                  longitude:
                    type: string
              required:
              - address
              - city
              - state
              - country
              - zip_code
              - latitude
              - longitude
          application/xml:
            schema:
              type: object
              properties:
                location:
                  address:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
                  zip_code:
                    type: string
                  latitude:
                    type: string
                  longitude:
                    type: string
              required:
              - address
              - city
              - state
              - country
              - zip_code
              - latitude
              - longitude
  "/locations/{id}":
    parameters:
    - name: Authorization
      in: header
      required: true
      description: Authorization token
      schema:
        type: string
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    - name: Client
      in: header
      required: true
      description: Client id
      schema:
        type: string
    get:
      summary: Get a location
      tags:
      - Município
      security:
      - Bearer: []
      responses:
        '200':
          description: location found
        '404':
          description: location not found
        '401':
          description: unauthorized
    patch:
      summary: Update a location
      tags:
      - Município
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        description: ID of the location
        schema:
          type: string
      responses:
        '200':
          description: location updated
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  seats:
                    type: integer
                  electoral_coefficient:
                    type: integer
              required: []
          application/xml:
            schema:
              type: object
              properties:
                location:
                  seats:
                    type: integer
                  electoral_coefficient:
                    type: integer
              required: []
  "/users":
    parameters:
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    post:
      summary: Create a user
      tags:
      - Usuário
      parameters: []
      responses:
        '201':
          description: user created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                registration:
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  password:
                    type: string
                  password_confirmation:
                    type: string
                  default_location_id:
                    type: integer
                client_id:
                  type: string
                client_secret:
                  type: string
              required:
              - email
              - first_name
              - last_name
              - password
              - password_confirmation
              - default_location_id
              - client_id
              - client_secret
    patch:
      summary: Edit a user
      tags:
      - Usuário
      security:
      - Bearer: []
      parameters:
      - name: Client
        in: header
        required: true
        description: Client id
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: Authorization token
        schema:
          type: string
      responses:
        '200':
          description: user edited
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                registration:
                  first_name:
                    type: string
                  last_name:
                    type: string
                  email:
                    type: string
              required: []
    delete:
      summary: Delete current user
      tags:
      - Usuário
      security:
      - Bearer: []
      parameters:
      - name: Client
        in: header
        required: true
        description: Client id
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: Authorization token
        schema:
          type: string
      responses:
        '200':
          description: user deleted
  "/users/me":
    parameters:
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    get:
      summary: Get current user
      tags:
      - Usuário
      parameters:
      - name: Client
        in: header
        required: true
        description: Client id
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: Authorization token
        schema:
          type: string
      responses:
        '200':
          description: user found
        '401':
          description: unauthorized
  "/users/update_password":
    parameters:
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    patch:
      summary: Edit user password
      tags:
      - Usuário
      security:
      - Bearer: []
      parameters:
      - name: Client
        in: header
        required: true
        description: Client id
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: Authorization token
        schema:
          type: string
      responses:
        '200':
          description: user password edited
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                registration:
                  current_password:
                    type: string
                  password:
                    type: string
                  password_confirmation:
                    type: string
              required:
              - current_password
              - password
              - password_confirmation
  "/users/update_avatar":
    parameters:
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    patch:
      summary: Edit user avatar
      tags:
      - Usuário
      security:
      - Bearer: []
      parameters:
      - name: Client
        in: header
        required: true
        description: Client id
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        description: Authorization token
        schema:
          type: string
      responses:
        '200':
          description: user avatar edited
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        required: true
        description: New photo image for the user
  "/oauth/token":
    parameters:
    - name: accept
      in: header
      required: true
      description: Accept header
      schema:
        type: string
    post:
      summary: Login user with email and password
      tags:
      - Sessão
      parameters: []
      responses:
        '200':
          description: logged in
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                grant_type:
                  type: string
                client_id:
                  type: string
                client_secret:
                  type: string
              required:
              - email
              - password
              - client_id
              - client_secret
  "/oauth/revoke":
    post:
      summary: Logout user
      tags:
      - Sessão
      parameters: []
      responses:
        '200':
          description: logged in
        '403':
          description: forbiden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                grant_type:
                  type: string
                client_id:
                  type: string
                client_secret:
                  type: string
              required:
              - token
              - client_id
              - client_secret
servers:
- url: https://api-contact-hub.bruno.buzz/api/v1
  variables:
    defaultHost:
      default: localhost:8000
